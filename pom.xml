<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>


    <groupId>org.modeshape</groupId>
    <artifactId>modeshape-sequencers</artifactId>
    <packaging>pom</packaging>
    <name>ModeShape Sequencers</name>
    <description>ModeShape built-in sequencers </description>
    <url>http://www.modeshape.org</url>
    <version>3.7.1.Final-ep37</version>


    <modules>
        <module>modeshape-sequencer-ddl</module>
    </modules>

    <profiles>
        <profile>
            <id>assembly</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration>
                            <descriptorRefs>
                                <descriptorRef>module-with-dependencies</descriptorRef>
                            </descriptorRefs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>



    <properties>

        <!-- Instruct the build to use only UTF-8 encoding for source code -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!--
          Global dependency version information
          -->
        <modeshape.java.version>1.8</modeshape.java.version>

        <joda.time.version>1.6.2</joda.time.version>
        <junit.version>4.10</junit.version>
        <hamcrest.version>1.1</hamcrest.version>
        <mockito.all.version>1.8.4</mockito.all.version>
        <slf4j.api.version>1.6.1</slf4j.api.version>
        <slf4j.log4j.version>1.6.1</slf4j.log4j.version>
        <log4j.version>1.2.16</log4j.version>
        <jcr.version>2.0</jcr.version>
        <infinispan.version>5.2.7.Final</infinispan.version>
    </properties>

    <build>

        <pluginManagement>
            <plugins>
                <!--
                        Fixes how test resources of a project can be used in projects
                        dependent on it
                    -->
                <plugin>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>maven-bundle-plugin</artifactId>
                    <extensions>true</extensions>
                    <configuration>
                        <instructions>
                            <Export-Package>org.modeshape.*</Export-Package>
                        </instructions>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <!-- Specify the compiler options and settings -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${modeshape.java.version}</source>
                    <target>${modeshape.java.version}</target>
                    <showDeprecation>false</showDeprecation>
                    <showWarnings>false</showWarnings>
                </configuration>
            </plugin>
            <!-- Produce source jars during package and test-source jars during the 'verify' phase -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>attach-test-sources</id>
                        <goals>
                            <goal>test-jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-eclipse-plugin</artifactId>
            </plugin>


            <!--Add OSGI metadata to manifest-->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

    <!--
         This section defines the default dependency settings inherited by
         child projects. Note that this section does not add dependencies, but
         rather provide default settings.
     -->
    <dependencyManagement>
        <dependencies>
            <!-- ModeShape subprojects -->
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-common</artifactId>
                <version>3.7.1.Final</version>
            </dependency>

            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-jcr</artifactId>
                <version>3.7.1.Final</version>
            </dependency>

            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-jcr-api</artifactId>
                <version>3.7.1.Final</version>
            </dependency>


            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>servlet-api</artifactId>
                <version>${javax.servlet.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.spec.javax.resource</groupId>
                <artifactId>jboss-connector-api_1.6_spec</artifactId>
                <version>1.0.1.Final</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.spec.javax.security.jacc</groupId>
                <artifactId>jboss-jacc-api_1.4_spec</artifactId>
                <version>${javax.jacc.version}</version>
                <scope>provided</scope>
            </dependency>



            <dependency>
                <groupId>javax.jms</groupId>
                <artifactId>jms-api</artifactId>
                <version>${javax.jms.version}</version>
                <scope>provided</scope>
            </dependency>
            <!--
               Time and Date
               -->
            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${joda.time.version}</version>
                <scope>compile</scope>
            </dependency>
            <!-- Testing (note the scope) -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit-dep</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-library</artifactId>
                <version>${hamcrest.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-all</artifactId>
                <version>${mockito.all.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- Logging (all of the libraries should be optional, as the logging implementation falls back to JUL if nothig is found -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.api.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>${slf4j.log4j.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>${log4j.version}</version>
                <scope>test</scope>
            </dependency>
            <!--WebDAV servlet-->
            <dependency>
                <groupId>org.jmock</groupId>
                <artifactId>jmock</artifactId>
                <version>${jmock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-webmvc</artifactId>
                <version>${spring.webmvc}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-mock</artifactId>
                <version>${spring.mock}</version>
                <scope>test</scope>
            </dependency>

            <!-- Apache chemistry -->
            <dependency>
                <groupId>org.apache.chemistry.opencmis</groupId>
                <artifactId>chemistry-opencmis-commons-api</artifactId>
                <version>${chemistry.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.chemistry.opencmis</groupId>
                <artifactId>chemistry-opencmis-commons-impl</artifactId>
                <version>${chemistry.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.chemistry.opencmis</groupId>
                <artifactId>chemistry-opencmis-server-support</artifactId>
                <version>${chemistry.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.chemistry.opencmis</groupId>
                <artifactId>chemistry-opencmis-server-jcr</artifactId>
                <version>${chemistry.version}</version>
                <classifier>classes</classifier>
            </dependency>

            <dependency>
                <groupId>org.apache.chemistry.opencmis</groupId>
                <artifactId>chemistry-opencmis-server-bindings</artifactId>
                <version>${chemistry.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.chemistry.opencmis</groupId>
                <artifactId>chemistry-opencmis-client-impl</artifactId>
                <version>${chemistry.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.chemistry.opencmis</groupId>
                <artifactId>chemistry-opencmis-server-inmemory</artifactId>
                <version>${chemistry.version}</version>
                <type>war</type>
            </dependency>

            <!-- GWT dependency -->
            <dependency>
                <groupId>com.google.gwt</groupId>
                <artifactId>gwt-servlet</artifactId>
                <version>${gwt.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>com.google.gwt</groupId>
                <artifactId>gwt-user</artifactId>
                <version>${gwt.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>smartgwt</groupId>
                <artifactId>smartgwt</artifactId>
                <version>${smartgwt.version}</version>
                <type>jar</type>
            </dependency>
            <dependency>
                <groupId>com.smartgwt</groupId>
                <artifactId>smartgwt-skins</artifactId>
                <version>${smartgwt.version}</version>
                <type>jar</type>
            </dependency>
            <!--
                Demo module
            -->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
                <scope>provided</scope>
            </dependency>
            <!-- Java Content Repository API -->
            <dependency>
                <groupId>javax.jcr</groupId>
                <artifactId>jcr</artifactId>
                <version>${jcr.version}</version>
                <scope>compile</scope>
            </dependency>
            <!--
                   Apache JCR API unit tests (for any JCR implementation), which is a
                   subset of the official TCK
               -->
            <dependency>
                <groupId>org.apache.jackrabbit</groupId>
                <artifactId>jackrabbit-jcr-tests</artifactId>
                <version>${jackrabbit.jcr.tck.version}</version>
                <scope>test</scope>
            </dependency>
            <!--
               JGit
               -->
            <dependency>
                <groupId>org.eclipse.jgit</groupId>
                <artifactId>org.eclipse.jgit</artifactId>
                <version>${jgit.version}</version>
            </dependency>
            <!--
               PicketBox (JAAS implementation used in test cases)
               -->
            <dependency>
                <groupId>org.picketbox</groupId>
                <artifactId>picketbox-bare</artifactId>
                <version>${picketbox.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>apache-xalan</groupId>
                        <artifactId>xalan</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>apache-xalan</groupId>
                        <artifactId>serializer</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>apache-xerces</groupId>
                        <artifactId>xml-apis</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>apache-xerces</groupId>
                        <artifactId>xercesImpl</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.hibernate</groupId>
                        <artifactId>hibernate</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!--
               JAX-B implementation used by some modules particularly the JBoss Console component
               -->
            <dependency>
                <groupId>com.sun.xml.bind</groupId>
                <artifactId>jaxb-impl</artifactId>
                <version>${sun.xml.bind.jaxbimpl.version}</version>
                <scope>runtime</scope>
            </dependency>
            <!--
               Web Modules dependencies
            -->
            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-jaxrs</artifactId>
                <version>${resteasy.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-simple</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>jcl-over-slf4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-jaxb-provider</artifactId>
                <version>${resteasy.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.sun.xml.bind</groupId>
                        <artifactId>jaxb-impl</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.sun.xml.stream</groupId>
                        <artifactId>stream.buffer</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-jettison-provider</artifactId>
                <version>${resteasy.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-multipart-provider</artifactId>
                <version>${resteasy.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.sun.xml.bind</groupId>
                        <artifactId>jaxb-impl</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.sun.xml.stream</groupId>
                        <artifactId>stream.buffer</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!--
                Since 2.3.6, RestEASY excludes the following dependency because of https://issues.jboss.org/browse/RESTEASY-848
                This is most likely a bug in RestEASY, because commons-logging is needed by resteasy-multipart-provider via
                its org.apache.james dependency
            -->
            <dependency>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
                <version>${commons.logging.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.codehaus.jettison</groupId>
                <artifactId>jettison</artifactId>
                <version>${jettison.version}</version>
                <exclusions>
                    <!-- This results in duplicate stax-api jars. This is the older one.
                         A newer is brought in by com.sun.xml.bind:jaxb-impl
                    -->
                    <exclusion>
                        <groupId>stax</groupId>
                        <artifactId>stax-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${httpclient.version}</version>
            </dependency>
            <!--WebDav client used for testing-->
            <dependency>
                <groupId>com.googlecode.sardine</groupId>
                <artifactId>sardine</artifactId>
                <version>${sardine.version}</version>
                <scope>test</scope>
            </dependency>




            <!--
                Schematic dependencies
            -->

            <dependency>
                <groupId>de.undercouch</groupId>
                <artifactId>bson4jackson</artifactId>
                <version>${bson4jackson.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.googlecode.json-simple</groupId>
                <artifactId>json-simple</artifactId>
                <version>${json.simple.version}</version>
                <scope>test</scope>
            </dependency>


            <!--Test dependency which allows custom JNDI bindings-->
            <dependency>
                <groupId>commons-naming</groupId>
                <artifactId>commons-naming-core</artifactId>
                <version>${commons.naming.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>



</project>
